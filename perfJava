# vim: filetype=sh
#!/bin/bash
#

JVM_EXPERIMENTAL_OPTS=" -XX:-Inline "

JVM_PERF_OPTS=" -XX:+PreserveFramePointer -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints $JVM_EXPERIMENTAL_OPTS"

JVM_OPTS="$JVM_PERF_OPTS "

PERF_RECORD_FREQ="299"

PERF_RECORD_TIME_IN_SEC="60"

PERF_PROFILE_EVENT="cycle"

PERF_MAP_AGENT_DIR="/workspace/perf-map-agent"

FLAME_GRAPH_DIR="/workspace/FlameGraph"

PERF_OUTPUT_DATA_PATH="/workspace/perf.data"

JAR_PATH=""

function perf_run {
	local demo_pid=`cat demo.pid`
	perf record $PERF_RECORD_OPTS

	cd "$PERF_MAP_AGENT_DIR/out"
	java -cp attach-main.jar:$JAVA_HOME/lib/tools.jar net.virtualvoid.perf.AttachOnce $demo_pid

	cd /workspace
	echo "Record done! Killing DEMO [$demo_pid]!"
	kill -9 $demo_pid
	mv demo.pid demo.pid.old
}

function gen_flamegraph {
	cd $FLAME_GRAPH_DIR

	perf script --input=$PERF_OUTPUT_DATA_PATH | ./stackcollapse-perf.pl | ./flamegraph.pl --color=java --hash > /vagrant/flamegraph.svg
}

function analyze_system_cpu {
	PERF_RECORD_OPTS=" -e $PERF_PROFILE_EVENT -F $PERF_RECORD_FREQ --output=$PERF_OUTPUT_DATA_PATH -a -g -- sleep $PERF_RECORD_TIME_IN_SEC"
	perf_run
	gen_flamegraph
}

function analyze_system_io {
	PERF_RECORD_OPTS=" -e $PERF_PROFILE_EVENT --output=$PERF_OUTPUT_DATA_PATH -a -g -- sleep $PERF_RECORD_TIME_IN_SEC"
	perf_run
	gen_flamegraph
}

function analyze_process_cpu {
	local demo_pid=`cat demo.pid` 
	PERF_RECORD_OPTS=" -e $PERF_PROFILE_EVENT -F $PERF_RECORD_FREQ --output=$PERF_OUTPUT_DATA_PATH -p $demo_pid -a -g -- sleep $PERF_RECORD_TIME_IN_SEC"
	perf_run
	gen_flamegraph
}

function analyze_process_io {
	local demo_pid=`cat demo.pid` 
	PERF_RECORD_OPTS=" -e $PERF_PROFILE_EVENT --output=$PERF_OUTPUT_DATA_PATH -p $demo_pid -a -g -- sleep $PERF_RECORD_TIME_IN_SEC"
	perf_run
	gen_flamegraph
}

function run_jar_in_background {
	# Running jar application in the background
	java $JVM_OPTS -jar $JAR_PATH &
	echo "$!" > demo.pid
}

usage() {
	echo $"Usage: $0 {system/process} $1 [{cpu/io}]"
    exit 1
}

case "$1" in
    system)
		echo "You picked (System) [$PERF_RECORD_TIME_IN_SEC sec / $PERF_RECORD_FREQ smp / sec]"
		JAR_PATH=$2
		run_jar_in_background
	
		if [ -z "$3" || "$3" == "cpu" ]
		then
			PERF_PROFILE_EVENT="cycle"
			analyze_system_cpu
		elif [ "$3" == "io" ]
		then			
			PERF_PROFILE_EVENT="block:block_rq_insert"
			analyze_system_io
		else
			usage
		fi

        ;;
    process)
		echo "You picked (process) [$PERF_RECORD_TIME_IN_SEC sec / $PERF_RECORD_FREQ smp / sec] "
		JAR_PATH=$2
		run_jar_in_background
		
		if [ -z "$3" || "$3" == "cpu" ]
		then
			PERF_PROFILE_EVENT="cycle"
			analyze_process_cpu
		elif [ "$3" == "io" ]
		then			
			PERF_PROFILE_EVENT="block:block_rq_insert"
			analyze_process_io
		else
			usage
		fi
        ;;
    *)  
        usage
        ;;
esac
